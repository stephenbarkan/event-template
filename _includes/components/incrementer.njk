{# Nested Components ------------------------------------------------------------------------------------------------------------------- #}

{% from "components/_fieldParts.njk" import fieldLabel, fieldDescription, directionClasses, fieldStyles, fieldWrapperStyles %}
{% from "snippets/loopAttrs.njk" import loopAttrs %}
{% from "components/button.njk" import button %}

{# Macro ------------------------------------------------------------------------------------------------------------------------------- #}

{% macro incrementer(props={}, attrs={}) %}

{# ------------------------------------------------------------------------------------------------------------------------------------- #}
<div
if
    x-data="{
        decrement() {
            {% if props.fieldAttrs.min != null %}
                if({{ props.name }} > {{ props.fieldAttrs.min }}) {
                    {{ props.name }} = {{ props.name }} - 1
                }
            {% else %}
                {{ props.name }} = {{ props.name }} - 1
            {% endif %}
        },
        increment() {
            {% if props.fieldAttrs.max != null %}
                if({{ props.name }} < {{ props.fieldAttrs.max }}) {
                    {{ props.name }} = {{ props.name }} + 1
                }
            {% else %}
                {{ props.name }} = {{ props.name }} + 1
            {% endif %}
        }
    }"
    {% if props.fieldAttrs.value %}x-init="{{ props.name }} = '{{ props.fieldAttrs.value }}'"{% endif %}
    {{ loopAttrs(attrs) }}
    class="{% if props.direction %}{{ directionClasses[props.direction] }}{% else %}{{ directionClasses['column'] }}{% endif %} {{ attrs.class }}">

    {% if props.label %}{{ fieldLabel({tag: "label", fieldProps:props}) }}{% endif %}

    <span class="{{ fieldWrapperStyles }} gap-1">
        {{ button(
            props={
                type: "button",
                variant: "outline",
                size: "sm",
                icon: "âˆ’"
            },
            attrs={
                "@click": "decrement",
                "class": "h-full",
                "type": "button"
            }
        ) }}
        <input
            x-model.number="{{ props.name }}"
            name="{{ props.name }}"
            id="{{ props.name }}"
            {{ loopAttrs(props.fieldAttrs) }}
            type="number"
            class="{{ fieldStyles }} {{ props.fieldAttrs.class }} text-center"
        >
        {{ button(
            props={
                type: "button",
                variant: "outline",
                size: "sm",
                icon: "+"
            },
            attrs={
                "@click": "increment",
                "class": "h-full",
                "type": "button"
            }
        ) }}
    </span>

    {% if props.description %}{{ fieldDescription(props) }}{% endif %}
</div>

{% endmacro %}
