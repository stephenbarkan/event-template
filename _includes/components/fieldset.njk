{# Component Documentation ------------------------------------------------------------------------------------------------------------- #}

{% set fieldsetMeta = {
    args: '{{ fieldset(
    props={
        type: "radio | checkbox",
        name: "",
        label: "",
        options: [],
        description: ""
    },
    attrs={},
    fieldAttrs={
        required: boolean
    }
) }}',
description: "
- Dispatches event `fieldset-{{ props.name }}` when the value is updated.
- You can get this value with `@fieldset-{{ props.name }}.window='{{ var }} = $event.detail'`
"
} %}

{# Nested Components ------------------------------------------------------------------------------------------------------------------- #}

{% from "components/_fieldParts.njk" import fieldLabel, fieldDescription, directionClasses, fieldStyles, fieldsetOptionStyles %}
{% from "snippets/loopAttrs.njk" import loopAttrs %}

{# Macro ------------------------------------------------------------------------------------------------------------------------------- #}

{% macro fieldset(props={}, attrs={}, fieldAttrs={}) %}

{# ------------------------------------------------------------------------------------------------------------------------------------- #}

<fieldset
    x-data="{
        selected: []
    }"
    id="{{ props.name }}"
    name="{{ props.name }}"
    class="{{ attrs.class }}"
    {{ loopAttrs(attrs) }}>
    <div class="{{ directionClasses["column"] }} @container">

        {% if props.label %}{{ fieldLabel(props={tag: "legend"}, fieldProps=props, fieldAttrs=fieldAttrs) }}{% endif %}
        {% if props.description %}{{ fieldDescription(props) }}{% endif %}

        <div class="{{ directionClasses["column"] }}">
            {% set comma = joiner() %}
            <template x-for="option in [{% for option in props.options %}{{ comma() }} '{{ option }}'{% endfor%}]">
                <div x-id="[option]" class="flex gap-2">
                    <input x-on:change="$dispatch('fieldset-{{ props.name }}', selected)" x-model="selected" class="accent-current w-[1.1em] h-[1.5em] shrink-0" type="{{ props.type }}" :id="$id(option)" name="{{ props.name }}" :value="option"/>
                    <label class="{{ fieldsetOptionStyles }}" :for="$id(option)" x-text="option"></label>
                </div>
            </template>
        </div>
    </div>
</fieldset>

{# ------------------------------------------------------------------------------------------------------------------------------------- #}

{% endmacro %}
