---
layout: base
---

{% from "components/container.njk" import container %}
{% from "snippets/loopAttrs.njk" import loopAttrs %}
{% from "components/_fieldParts.njk" import fieldLabel, fieldDescription, directionClasses, fieldStyles, fieldsetOptionStyles, fieldWrapperStyles %}
{% from "components/markdown.njk" import markdown %}
{% from "components/input.njk" import input %}
{% from "components/textarea.njk" import textarea %}
{% from "components/radio.njk" import radio %}
{% from "components/checkbox.njk" import checkbox %}
{% from "components/button.njk" import button %}

{# Input ------------------------------------------------------------------------------------------------------------------------------- #}

{# {% macro input(props={}, attrs={}) %}
    <input
        x-model="{{ props.name }}"
        name="{{ props.name }}"
        id="{{ props.name }}"
        {{ loopAttrs(props.fieldAttrs) }}
        class="{{ fieldStyles }} {{ fieldWrapperStyles }} {{ props.fieldAttrs.class }}"
    >
{% endmacro %} #}

{# Radio ------------------------------------------------------------------------------------------------------------------------------- #}

{# {% macro radio(props={}, attrs={}) %}
    <fieldset
        name="{{ props.name }}"
        class="{{ attrs.class }}"
        {{ loopAttrs(attrs) }}
    >
        <div class="{{ directionClasses["column"] }}">
            {% set comma = joiner() %}
            {% for option in props.options %}
                <div x-data="{ id: $id('{{ option.value }}')}" class="flex gap-2">
                    <input
                        :checked="{{ props.name }} === {{ loop.index  - 1}}"
                        x-on:change="{{ props.name }} = {{ loop.index  - 1}}"
                        :id="id"
                        type="radio"
                        name="{{ props.name }}"
                        value="{{ option.value }}"
                        class="accent-current w-[1.1em] h-[1.5em] shrink-0"/>
                    <label class="{{ fieldsetOptionStyles }}" :for="id">{{ option.label }}</label>
                </div>
            {% endfor %}
        </div>
    </fieldset>
{% endmacro %} #}

{# Checkbox ---------------------------------------------------------------------------------------------------------------------------- #}

{# {% macro checkbox(props={}, attrs={}) %}
    <fieldset
        name="{{ props.name }}"
        class="{{ attrs.class }}"
        {{ loopAttrs(attrs) }}
    >
        <div class="{{ directionClasses["column"] }}">
            {% set comma = joiner() %}
            {% for option in props.options %}
                <div
                    x-data="{
                        id: $id('{{ option.value }}'),
                        setChecked () {
                            const arr = {{ props.name }}
                            i = {{ loop.index  - 1}}
                            return arr.includes(i) ? arr.splice(arr.indexOf(i), 1) : arr.push(i)
                        }
                    }"
                    class="flex gap-2">
                    <input
                        :checked="{{ props.name }}.includes({{ loop.index  - 1}})"
                        x-on:change="setChecked"
                        :id="id"
                        type="checkbox"
                        name="{{ props.name }}"
                        value="{{ option.value }}"
                        class="accent-current w-[1.1em] h-[1.5em] shrink-0"/>
                    <label class="{{ fieldsetOptionStyles }}" :for="id">{{ option.label }}</label>
                </div>
            {% endfor %}
        </div>
    </fieldset>
{% endmacro %} #}




{# Mockup ------------------------------------------------------------------------------------------------------------------------------ #}

{% call container({size: "narrow", type: "cols-1"},{class:"py-section"}) %}

    <form
                name="rsvp"
            method="POST"
            action="/success"
            netlify
            tabindex="0"
        id="form"
        x-data="{
            email: '',
            textarea: '',
            ticketTier: null,
            checkboxes: []
        }"
        class="flex flex-col gap-half-section">
        {{ textarea(
            props={
                name: "textarea",
                label: "Textarea",
                description: "This is a textarea",
                direction: "column",
                fieldAttrs:{
                    placeholder: "Placeholder",
                    required: true,
                    rows: "10"
                }
            },
            attrs={}
        ) }}
        {{ input(
            {
                name: 'email',
                label: "label!",
                description: "description!",
                fieldAttrs: {
                    type: "email",
                    placeholder: "testing"
                }
            },
            {},
            {type:'email'}) }}
        {{ radio(
            {
                name: 'ticketTier',
                label: "Ticket tier",
                description: "this is a description",
                options: [
                    {label: "$10-15 if things are tight right now", value: "$10-15"},
                    {label: "$15-25 if you’re managing", value: "$15-25"},
                    {label: "$25-50 if you’re financially comfortable", value: "$25-50"}
                ],
                fieldAttrs: {required: true}
            }) }}
        {{ checkbox(
            {
                name: 'checkboxes',
                label: "Checkboxes!",
                description: "this is a description",
                options: [
                    {label: "$10-15 if things are tight right now", value: "$10-15"},
                    {label: "$15-25 if you’re managing", value: "$15-25"},
                    {label: "$25-50 if you’re financially comfortable", value: "$25-50"}
                ]
            }) }}

    {% call markdown(
        props={transform: false},
        attrs={}
    ) %}
        <pre>
<code>Textarea: <span x-text="textarea"></span>
Email: <span x-text="email"></span>
Ticket tier: <span x-text="ticketTier"></span>
Checkboxes: <span x-text="checkboxes"></span>
</code>
        </pre>
    {% endcall %}

    {{ button({label: "Submit RSVP", type:"button", size:"base", variant: "ink"}, {type:"submit", class:"w-full"}) }}
    </form>
{% endcall %}
